1. start from readme.txt
2. How to build and run Oxygine on Windows with CMake and Visual Studio (tested with VS2010 and VS2012). Steps:
=================================================================================================
- build SDL2
    - see oxygine-framework/readme/VisualStudio.txt 

- Find and copy compiled SDL2 libraries to oxygine-framework/libs:
  - SDL2.lib
  - SDL2main.lib
  - SDL2.dll


- select any example from examples folder. I chose Demo
- go to folder oxygine-framework/examples/Demo/proj.cmake
- run: cmake .
- open generated solution. 
- Select Demo project and set it "as startup project".
- set working directory for Demo project to "..\data"
	(right mouse click on Demo -> project->properties->ConfigurationProperties->Debugging->WorkingDirectory)
- copy all dlls from  oxygine-framework\oxygine\third_party\win32\dlls\
   and SDL2.dll from oxygine-framework/libs 
   to  oxygine-framework\examples\Demo\data\   
   
- ready! run!


3. How to build and run Oxygine on Linux with CMake & make
=================================================================================================
make and install SDL2
- also should be installed packages (apt-get install):
  - libjpeg8-dev zlib1g-dev libpng12-dev
  - freeglut3 (needed only opengl)
- goto oxygine-framework/examples/Demo (or any other example)
- goto folder proj.cmake
- exec shell script "run.sh":
   ./run.sh   
   

=================================================================================================

4. You could generate your own CMake configuration
- you need installed Python 2.7
- you need to run this script
  oxygine-framework\tools\gen_template.py

example:
	python gen_template.py MyProject -t cmake -d path/to/MyProject/
	

